<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.haifeng</groupId>
	<artifactId>serve-core-config</artifactId>
	<version>1.0</version>
	<name>serve-core-config</name>
	<description>核心配置包/异常处理/jwt/security</description>
	<packaging>jar</packaging>

	<properties>
		<java.version>1.8</java.version>
		<jjwt.version>0.9.0</jjwt.version>
		<fastjson.version>1.2.47</fastjson.version>
		<com.battcn.version>2.1.5</com.battcn.version>
		<guava.version>23.0</guava.version>
		<com.github.fashionbrot.version>2.0.0</com.github.fashionbrot.version>
		<org.mybatis.spring.boot.version>2.1.4</org.mybatis.spring.boot.version>
		<github.global.server>github</github.global.server>
	</properties>
	<dependencyManagement>
	    <dependencies>
	      <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-dependencies</artifactId>
	        <version>2.4.0</version>
	        <type>pom</type>
	        <scope>import</scope>
	      </dependency>
	    </dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
	        <groupId>com.github.haifeng</groupId>
	        <artifactId>serve-core-common-response</artifactId>
			<version>1.0</version>
	    </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
		<dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
		<dependency>
            <groupId>com.github.fashionbrot</groupId>
            <artifactId>validated-springboot-starter</artifactId>
            <version>${com.github.fashionbrot.version}</version>
        </dependency>
        <dependency>
		    <groupId>com.battcn</groupId>
		    <artifactId>swagger-spring-boot-starter</artifactId>
		    <version>${com.battcn.version}-RELEASE</version>
		</dependency>
		<dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
		<dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-configuration-processor</artifactId>
        	<optional>true</optional>
        </dependency>
	</dependencies>
	
	<build>
	    <plugins>
	        <plugin>
	            <artifactId>maven-deploy-plugin</artifactId>
	            <version>2.8.2</version>
	            <configuration>
	                <!-- altDeploymentRepository ：指定替代方案应该部署项目工件的存储库（除了指定的工件）。 -->
	                <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo
	                </altDeploymentRepository>
	            </configuration>
	        </plugin>
	        <!--源码-->
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-source-plugin</artifactId>
			    <version>3.2.1</version>
			    <executions>
			        <execution>
			            <id>attach-sources</id>
			            <goals>
			                <goal>jar-no-fork</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
			
			<!--github上传插件,用于修改后的发布,执行 mvn clean deploy 自动打包上传到github-->
			<plugin>
			    <groupId>com.github.github</groupId>
			    <artifactId>site-maven-plugin</artifactId>
			    <version>0.12</version>
			    <configuration>
			        <message>Creating site for ${project.artifactId} ${project.version}</message>
			        <noJekyll>true</noJekyll>
			        <!--本地jar地址, 对应上面的altDeploymentRepository-->
			        <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
			        <!--分支-->
			        <branch>refs/heads/master</branch>
			        <merge>true</merge>
			
			        <includes>
			            <include>**/*</include>
			        </includes>
			        <!--对应github上创建的仓库名称 name-->
			        <repositoryName>mvn-repo</repositoryName>
			        <!--github登录账号 对应的密码存在maven的setting.xml文件中-->
			        <!--由github组织拥有，则该值将是组织名称，如果由用户拥有，则该值将是用户名-->
			        <repositoryOwner>zhanghaif</repositoryOwner>
			    </configuration>
			
			    <executions>
			        <execution>
			            <goals>
			                <goal>site</goal>
			            </goals>
			            <phase>deploy</phase>
			        </execution>
			    </executions>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
	    </plugins>
	</build>
	
	<repositories>
	    <repository>
	        <id>mvn-repo</id>
	        <url>https://raw.github.com/zhanghaif/mvn-repo/master</url>
	        <snapshots>
	            <enabled>true</enabled>
	            <updatePolicy>always</updatePolicy>
	        </snapshots>
	    </repository>
	</repositories>
</project>
